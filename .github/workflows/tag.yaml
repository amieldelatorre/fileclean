name: New Tag Created

on:
  push:
    tags:
      - "**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test_on_tag:
    uses: ./.github/workflows/push.yaml
  
  create_release_draft:
    runs-on: ubuntu-latest
    needs: [ test_on_tag ]
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create release draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: gh release create "$TAG" --title="$TAG" --draft

  create_docker_image:
    needs: [ create_release_draft ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4 

      - name: Setup Docker QEMU Emulation
        uses: docker/setup-qemu-action@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
      
      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  
  
  create_linux_amd64_executable:
    needs: [ create_release_draft ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Create and upload executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          go build -o fileclean .
          tar -czvf fileclean_linux_amd64.tar.gz fileclean
          gh release upload "$TAG" --clobber fileclean_linux_amd64.tar.gz

  create_windows_amd64_executable:
    needs: [ create_release_draft ]
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Create and upload executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          go build -o fileclean.exe .
          Compress-Archive -Path fileclean.exe -DestinationPath fileclean_windows_amd64.zip
          gh release upload "$env:TAG" --clobber fileclean_windows_amd64.zip
  
  create_macos_arm64_executable:
    needs: [ create_release_draft ]
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Create and upload executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          go build -o fileclean .
          tar -czvf fileclean_darwin_arm64.tar.gz fileclean
          gh release upload "$TAG" --clobber fileclean_darwin_arm64.tar.gz
  
  
  publish-release:
    needs: 
      - create_docker_image
      - create_linux_amd64_executable
      - create_windows_amd64_executable
      - create_macos_arm64_executable
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: gh release edit "$TAG" --draft=false
    
        
    
    
    
    